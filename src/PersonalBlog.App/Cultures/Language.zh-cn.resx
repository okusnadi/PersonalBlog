<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_Back" xml:space="preserve">
    <value>返回</value>
  </data>
  <data name="Button_Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="Button_No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="Button_Submit" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="Button_Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="Field_Login_Password" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="Field_Login_UserName" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="Field_Post_Category_Name" xml:space="preserve">
    <value>分类名称</value>
  </data>
  <data name="Field_Post_Content" xml:space="preserve">
    <value>文章内容</value>
  </data>
  <data name="Field_Post_Title" xml:space="preserve">
    <value>文章标题</value>
  </data>
  <data name="Field_Top" xml:space="preserve">
    <value>置顶</value>
  </data>
  <data name="Input_Category_Name_Placeholder" xml:space="preserve">
    <value>分类的名称</value>
  </data>
  <data name="Input_Category_SortNo_Placeholder" xml:space="preserve">
    <value>分类排序，从小到大</value>
  </data>
  <data name="Input_Post_Content_Placeholder" xml:space="preserve">
    <value>你可以在这里写内容，但仅支持 Markdown 语法！！！</value>
  </data>
  <data name="Input_Post_Title_Placeholder" xml:space="preserve">
    <value>请填写标题</value>
  </data>
  <data name="Message_Category_Table_Id" xml:space="preserve">
    <value>编号</value>
  </data>
  <data name="Message_Category_Table_Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Message_Category_Table_SortNo" xml:space="preserve">
    <value>排序</value>
  </data>
  <data name="Message_ConfirmAction" xml:space="preserve">
    <value>你确定要这样做吗？</value>
  </data>
  <data name="Message_Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Message_Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Message_Login_Invalid" xml:space="preserve">
    <value>登录失败</value>
  </data>
  <data name="Message_NewCategory" xml:space="preserve">
    <value>新分类</value>
  </data>
  <data name="Message_NewPost" xml:space="preserve">
    <value>新文章</value>
  </data>
  <data name="Message_NoData" xml:space="preserve">
    <value>抱歉，没有任何数据...</value>
  </data>
  <data name="Message_NotAuthorized" xml:space="preserve">
    <value>抱歉，你没有权限访问！</value>
  </data>
  <data name="Message_SubmitError" xml:space="preserve">
    <value>提交出现了错误</value>
  </data>
  <data name="Message_SubmitSuccess" xml:space="preserve">
    <value>提交成功啦！</value>
  </data>
  <data name="Message_Table_Operation" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="Page_Categories" xml:space="preserve">
    <value>分类</value>
  </data>
  <data name="Page_Category_All" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="Page_Create" xml:space="preserve">
    <value>创建</value>
  </data>
  <data name="Page_Detail" xml:space="preserve">
    <value>详情</value>
  </data>
  <data name="Page_Edit" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="Page_Login" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="Page_Setting" xml:space="preserve">
    <value>系统设置</value>
  </data>
  <data name="Page_Setting_Admin" xml:space="preserve">
    <value>管理员配置</value>
  </data>
  <data name="Page_Setting_Site" xml:space="preserve">
    <value>站点配置</value>
  </data>
  <data name="Page_SignOut" xml:space="preserve">
    <value>登出</value>
  </data>
  <data name="Validate_Field_Required" xml:space="preserve">
    <value>{0} 是必填项</value>
  </data>
  <data name="Validate_Field_StringLength" xml:space="preserve">
    <value>字段 {0} 限制的长度在 {1} 个字符以内</value>
  </data>
</root>