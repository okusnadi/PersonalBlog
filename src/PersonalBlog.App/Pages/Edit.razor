@page "/Edit"
@page "/Edit/{id}"

@attribute [Authorize]
@using Markdig
@using Markdig.SyntaxHighlighting

    <div class="row">
        <div class="col-12">
            <h2>Edit</h2>
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <EditForm Model="model" OnValidSubmit="@OnSubmitAsync" Context="form">
                <DataAnnotationsValidator/>
                <ValidationSummary class="alert alert-danger"/>
                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <InputSelect @bind-Value="model.Category" class="form-control">
                                <option value="">--Categories--</option>
                                @foreach (var item in _categories)
                                {
                                    <option value="@item">@item</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="col-8">
                            <InputText class="form-control" @bind-Value="model.Title" placeholder="Please enter your title" />
                        </div>
                        <div class="col-2">
                            <button type="submit" class="btn btn-primary">
                                Submit
                            </button>
                            <button class="btn btn-link" @onclick="GoBack">
                                Back
                            </button>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-6">
                            <InputTextArea class="form-control" @bind-Value="model.Content" @oninput="TransformMarkdown" placeholder="Please write your content here...Markdown Support Only!!!"  @attributes="@Attibutes"/>

                        </div>
                        <div class="col-6 border pt-1 pl-2 pr-2 bg-light" style="height:@height;overflow-y:scroll">
                            @marktext
                        </div>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
@inject NavigationManager _navigationManager
@inject BlogService _blogService
@inject IOptions<BlogSettings> _blogSettings
@functions{
    string height = "600px";
    MarkupString marktext;

    private string[] _categories => _blogSettings.Value.Categories;

    Post model = new Post();

    MarkdownPipeline pipeline = new MarkdownPipelineBuilder().UseAdvancedExtensions().UseSyntaxHighlighting().Build();


    IDictionary<string, object> Attibutes => new Dictionary<string, object>
    {
        ["style"] = $"height:{height}"
    };

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            model = await _blogService.CrudServiceProvider.FindAsync<Post>(Id);

            if (model == null)
            {
                _navigationManager.NavigateTo("/404");
                return;
            }

            var html = Markdown.ToHtml(model.Content, pipeline);
            marktext = new MarkupString(html);
        }
    }


    void TransformMarkdown(ChangeEventArgs e)
    {
        var value = e.Value.ToString();

        try
        {
            var html = Markdown.ToHtml(value, pipeline);

            marktext = new MarkupString(html);
        }
        catch (Exception ex)
        {
            marktext =new MarkupString(value);
        }
        this.StateHasChanged();
    }

    void GoBack()
    {
        _navigationManager.NavigateTo("/");
    }

    async Task OnSubmitAsync()
    {
        var rows = await _blogService.CrudServiceProvider.CreateAsync(model);
        GoBack();
    }
}